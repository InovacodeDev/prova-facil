name: Deploy to Vercel

on:
    push:
        branches:
            - main
            - staging
            - dev
    pull_request:
        branches:
            - main
            - staging
            - dev

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: Setup pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10

            - name: Install Vercel CLI
              run: pnpm add -g vercel@latest

            - name: Pull Vercel Environment Information (Production)
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Pull Vercel Environment Information (Preview - Staging)
              if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

            - name: Pull Vercel Environment Information (Development)
              if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
              run: vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts (Production)
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts (Preview - Staging)
              if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts (Development)
              if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy to Vercel (Production)
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: |
                  url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
                  echo "deployment_url=$url" >> $GITHUB_OUTPUT
                  echo "### 🚀 Production Deployment" >> $GITHUB_STEP_SUMMARY
                  echo "**URL:** $url" >> $GITHUB_STEP_SUMMARY
                  echo "**Branch:** main" >> $GITHUB_STEP_SUMMARY
                  echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY

            - name: Deploy to Vercel (Preview - Staging)
              if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
              run: |
                  url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
                  echo "deployment_url=$url" >> $GITHUB_OUTPUT
                  echo "### 🎭 Staging Deployment" >> $GITHUB_STEP_SUMMARY
                  echo "**URL:** $url" >> $GITHUB_STEP_SUMMARY
                  echo "**Branch:** staging" >> $GITHUB_STEP_SUMMARY
                  echo "**Environment:** Preview (Staging)" >> $GITHUB_STEP_SUMMARY

            - name: Deploy to Vercel (Development)
              if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
              run: |
                  url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
                  echo "deployment_url=$url" >> $GITHUB_OUTPUT
                  echo "### 🧪 Development Deployment" >> $GITHUB_STEP_SUMMARY
                  echo "**URL:** $url" >> $GITHUB_STEP_SUMMARY
                  echo "**Branch:** dev" >> $GITHUB_STEP_SUMMARY
                  echo "**Environment:** Development" >> $GITHUB_STEP_SUMMARY

            - name: Skip deployment (Feature Branch)
              if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/staging' && github.ref != 'refs/heads/dev'
              run: |
                  echo "### ⏭️ Deployment Skipped" >> $GITHUB_STEP_SUMMARY
                  echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Reason:** Only main, staging, and dev branches are deployed" >> $GITHUB_STEP_SUMMARY
                  echo "This branch should be developed and tested locally" >> $GITHUB_STEP_SUMMARY
